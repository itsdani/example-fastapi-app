name: Test & Publish package

on:
  push:
    tags:
      - v*

env:
  REPOSITORY_NAME: "itsdani-local"
  REPOSITORY_URL: "https://us-east1-python.pkg.dev/home-automation-213900/itsdani-local/"

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      # Set up the build environment
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.8.22"
          enable-cache: true
      # Log into google cloud
      - name: Authenticate to google cloud
        uses: google-github-actions/auth@v2
        id: auth
        with:
          token_format: access_token
          project_id: home-automation-213900
          workload_identity_provider: projects/600470555909/locations/global/workloadIdentityPools/github-actions-identity-pool/providers/github-actions
          service_account: github-actions@home-automation-213900.iam.gserviceaccount.com
      # Install, test and build the package
      - name: Install the project
        run: |
          UV_INDEX_ITSDANI_VIRTUAL_PASSWORD=${{ steps.auth.outputs.access_token }} \
          UV_INDEX_ITSDANI_VIRTUAL_USERNAME=oauth2accesstoken \
          uv sync --locked --all-extras --dev
      - name: Run tests
        run: uv run pytest tests
      - name: Build and publish the package
        id: publish
        run: |
          PACKAGE_VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=${PACKAGE_VERSION}" >> $GITHUB_OUTPUT
          export UV_INDEX_ITSDANI_VIRTUAL_PASSWORD=${{ steps.auth.outputs.access_token }}
          export UV_INDEX_ITSDANI_VIRTUAL_USERNAME=oauth2accesstoken
          uv version $PACKAGE_VERSION
          uv build
          uv publish dist/* \
            --username oauth2accesstoken \
            --password ${{ steps.auth.outputs.access_token }} \
            --publish-url $REPOSITORY_URL
      # Build and push the docker image
      - name: Login to Google Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: us-east1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push Docker image
        uses: 'docker/build-push-action@v6'
        with:
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          secrets: |
            packagefeed-token=${{ steps.auth.outputs.access_token }}
          tags: |
            us-east1-docker.pkg.dev/home-automation-213900/home-control-center/example-fastapi-app:latest
            us-east1-docker.pkg.dev/home-automation-213900/home-control-center/example-fastapi-app:${{ steps.publish.outputs.version }}
